Filename: BusquedaInsertBthree.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
     6     95.0 MiB     95.0 MiB           1   @profile(stream=fp)
     7                                         def bthree():
     8                                             # Leer el dataframe de productos y instanciar el árbol B
     9    185.3 MiB     90.4 MiB           1       product_df = pd.read_csv('product_df.csv')
    10    185.3 MiB      0.0 MiB           1       btree = BThree()
    11                                         
    12                                             ###########################################################
    13                                             # Insertar productos en el Arbol B
    14                                             ###########################################################
    15    641.1 MiB     12.3 MiB       44425       for index, row in product_df.iterrows():
    16    641.1 MiB     97.5 MiB       44424           feature_vector = row.drop('id').values
    17    641.1 MiB    346.0 MiB       44424           btree.insert(row['id'], feature_vector)
    18                                         
    19                                             ###########################################################
    20                                             # Buscar productos similares
    21                                             ###########################################################
    22                                             # Seleccionar un producto de referencia
    23    641.1 MiB      0.0 MiB           1       target_product_id = 1634
    24                                             # Obtener el vector de características del producto de referencia
    25    641.2 MiB      0.1 MiB           1       target_vector = product_df[product_df['id'] == target_product_id].values[0][1:]
    26                                             # Buscar productos similares al producto de referencia
    27    647.8 MiB      6.6 MiB           1       recommended_products = btree.search_similar(target_vector, k=8)
    28                                             # Mostrar IDs de los productos recomendados
    29    647.8 MiB      0.0 MiB           9       recommended_product_ids = [product[1] for product in recommended_products]
    30    647.8 MiB      0.0 MiB           1       return btree, target_product_id, recommended_product_ids


